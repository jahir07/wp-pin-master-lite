<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">

	<!-- What to scan -->
    <file>.</file>
    <exclude-pattern>*/.git/*</exclude-pattern>
    <exclude-pattern>*/.githooks/*</exclude-pattern>
    <exclude-pattern>*/.make/*</exclude-pattern>
    <exclude-pattern>*/assets/*</exclude-pattern>
    <exclude-pattern>*/src/*</exclude-pattern>
    <exclude-pattern>*/lib/*</exclude-pattern>
    <exclude-pattern>*/dist/*</exclude-pattern>
    <exclude-pattern>*/build/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.mo</exclude-pattern>
    <exclude-pattern>*.po</exclude-pattern>
    <exclude-pattern>*.twig</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*.scss</exclude-pattern>
    <exclude-pattern>languages/*</exclude-pattern>

    <arg value="sp"/> <!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="colors"/>
    <arg value="s"/>
    <arg name="extensions" value="php"/>

    <!-- Strip the filepaths down to the relevant bit. -->
    <arg name="basepath" value="./"/>

    <!-- Check up to 20 files simultaneously. -->
    <arg name="parallel" value="20"/>

    <!-- Rules: Check PHP version compatibility -->
    <!-- https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions -->
    <config name="testVersion" value="7.0-"/>
    <config name="minimum_supported_wp_version" value="5.4"/>

    <!-- Rules: Check PHP version compatibility-->
    <!-- https://github.com/PHPCompatibility/PHPCompatibilityWP -->
	<rule ref="PHPCompatibilityWP"/>

    <rule ref="WordPress-Core">
        <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
        <exclude name="Generic.Commenting.DocComment.MissingShort" />
        <exclude name="WordPress.PHP.DisallowShortTernary" />
    </rule>

    <rule ref="WordPress-Docs">
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>

    <!-- Use WordPress "Extra" Coding Standards. -->
	<rule ref="WordPress-Extra">
		<!-- Allow array short syntax. -->
		<exclude name="Generic.Arrays.DisallowShortArraySyntax" />
		<!-- Allow short prefixes. -->
		<exclude name="WordPress.NamingConventions.PrefixAllGlobals.ShortPrefixPassed"/>
	</rule>

    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <!-- text domain "pin-master" -->
                <element value="pin-master"/> 
            </property>
        </properties>
    </rule>

    <rule ref="WordPress.Files.FileName.InvalidClassFileName">
        <exclude-pattern>tests/*</exclude-pattern>
        <exclude-pattern>includes/*</exclude-pattern>
    </rule>

    <rule ref="WordPress.WP.GlobalVariablesOverride.Prohibited">
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>

    <rule ref="WordPress.WP.AlternativeFunctions">
        <exclude-pattern>bin/*</exclude-pattern>
    </rule>

    <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
        <exclude-pattern>includes/*</exclude-pattern>
    </rule>

    <!-- Enforce PascalCase file names in includes/ only. -->
    <rule ref="Squiz.Classes.ClassFileName">
        <include-pattern>includes/*</include-pattern>
    </rule>

    <!-- Allow NotHyphenatedLowercase for TestCase class -->
    <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
        <exclude-pattern>tests/php/TestCase.php</exclude-pattern>
        <exclude-pattern>tests/php/DataProvider.php</exclude-pattern>
    </rule>

    <!-- Limit max. consecutive blank lines to 1 instead of 2. -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="spacingBeforeFirst" value="1"/>
            <property name="spacingAfterLast" value="0"/>
        </properties>
    </rule>

    <rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
        <properties>
            <property name="blank_line_check" value="true"/>
        </properties>
    </rule>

    
    <rule ref="Squiz.Commenting">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.MultipleArguments">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.SpacingBeforeTags">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.Files.FileName">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.PHP.DevelopmentFunctions">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Formatting.MultipleStatementAlignment.NotSameWarning">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.PHP.YodaConditions.NotYoda">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.WhiteSpace.ControlStructureSpacing.NoSpaceAfterCloseParenthesis">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.Arrays.ArrayDeclarationSpacing.AssociativeArrayFound">
        <type>warning</type>
    </rule>
    <rule ref="WordPress.DB.DirectDatabaseQuery.NoCaching">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.PHP.StrictInArray.MissingTrueStrict">
        <type>error</type>
    </rule>
    <rule ref="WordPress.DB.DirectDatabaseQuery.DirectQuery">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.Security.EscapeOutput.OutputNotEscaped">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.DB.PreparedSQL.NotPrepared">
        <type>warning</type>
    </rule>
    <rule ref="WordPress.PHP.DevelopmentFunctions.error_log_var_export">
        <severity>0</severity>
    </rule>
    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <properties>
            <property name="customSanitizingFunctions" type="array">
                <element value="wc_clean"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.PHP.CommentedOutCode.Found">
            <severity>0</severity>
    </rule>

</ruleset>